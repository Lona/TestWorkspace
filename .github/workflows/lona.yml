name: Lona

on:
  push:
    branches:
      - master

jobs:
  build:
    runs-on: macOS-latest

    env:
      OUTPUT_PATH: ./.lona-output

    steps:
      - name: Check if Lona is enabled on this repo
        id: lona
        uses: Lona/lona-check-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/checkout@v1
      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "8.x"
      - name: Cache node modules
        uses: actions/cache@preview
        with:
          path: node_modules
          key: ${{ runner.os }}-node
      - name: Install Lona Compiler
        run: npm install lonac @lona/workspace-to-sketch-library
      - name: Create Output Folder
        run: mkdir ${{ env.OUTPUT_PATH }}
      - name: Generate flat JSON
        run: ./node_modules/.bin/lonac flatten --workspace . > ${{ env.OUTPUT_PATH }}/flat-json.json
      - name: Generate Sketch library
        run: 'node -e "require(''@lona/workspace-to-sketch-library'')(process.cwd(), ''${{ env.OUTPUT_PATH }}/sketch-library.sketch'', { logFunction: console.log.bind(console) }).catch(err => { console.log(err); process.exit(1); })"'
      - name: Bump version and push tag
        id: tag_version
        uses: mathieudutour/github-tag-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch
      - name: Create GitHub release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          draft: false
          prerelease: false
      - name: Upload Sketch Library
        id: upload_sketch_library
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.OUTPUT_PATH }}/sketch-library.sketch
          asset_name: library.sketch
          asset_content_type: application/zip
      - name: Upload Tokens List
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.OUTPUT_PATH }}/flat-json.json
          asset_name: tokens.json
          asset_content_type: application/json
      # - name: Generate Documentation Website
      #   run: echo "use compiler to generate html"
      #   env:
      #     SKETCH_LIBRARY_URL: ${{ steps.upload_sketch_library.outputs.browser_download_url }}
      # - name: Deploy Documentation Website
      #   run: echo "deploy website to S3"
      #   with:
      #     UPLOAD_URL: ${{ steps.lona.outputs.upload_url }}
