name: Lona Production

on:
  push:
    branches:
      - master

jobs:
  documentation:
    runs-on: ubuntu-latest

    steps:
      - name: Get the latest version of the repository
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Bump the workspace version
        id: tag_version
        uses: mathieudutour/github-tag-action@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          default_bump: patch

      - name: Check if Lona is enabled on this repo
        id: lona
        uses: Lona/lona-github-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          workflow_succeeded: ${{ job.status == 'Success' }}
          ref_name: refs/tags/${{ steps.tag_version.outputs.new_tag || steps.tag_version.outputs.previous_tag }}

      - name: Install the Lona Compiler
        run: npm install lonac

      - name: Extract the list of design tokens
        run: ./node_modules/.bin/lonac flatten --workspace . > ${{ steps.lona.outputs.output_folder }}/flat-json.json

      - name: Create a GitHub release
        id: create_release
        uses: actions/create-release@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.tag_version.outputs.new_tag }}
          release_name: Release ${{ steps.tag_version.outputs.new_tag }}
          draft: "false"
          prerelease: "false"

      - name: Publish the design tokens to the release
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ steps.lona.outputs.output_folder }}/flat-json.json
          asset_name: tokens.json
          asset_content_type: application/json

      - name: Generate the documentation website
        uses: Lona/lona-docs-github-action@v1
        with:
          output_folder: ${{ steps.lona.outputs.output_folder }}

      - name: Pass variables to other actions (1/2)
        run: |
          mkdir -p .__lona-artifact-path
          echo "::set-output name=upload_url::${{ steps.create_release.outputs.upload_url }}
          ::set-output name=new_version::${{ steps.tag_version.outputs.new_version }}
          ::set-output name=new_tag::${{ steps.tag_version.outputs.new_tag }}
          " > .__lona-artifact-path/variables.txt
      - name: Pass variables to other actions (2/2)
        uses: actions/upload-artifact@v1
        with:
          name: lona-variables
          path: .__lona-artifact-path

  sketch-library:
    runs-on: macos-latest
    needs: [documentation]
    steps:
      - name: Get variables from documentation (1/2)
        uses: actions/download-artifact@v1
        with:
          name: lona-variables
          path: .__lona-artifact-path
      - name: Get variables from documentation (2/2)
        run: |
          while read p; do
            echo "$p"
          done <.__lona-artifact-path/variables.txt
        id: variables

      - name: Get the latest version of the repository
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Install the Lona Compiler
        run: npm install lonac @lona/workspace-to-sketch-library

      - name: Generate the Sketch library
        run: 'node -e "require(''@lona/workspace-to-sketch-library'').default(process.cwd(), ''.__lona-artifact-path/sketch-library.sketch'', { logFunction: console.log.bind(console) }).catch(err => { console.log(err); process.exit(1); })"'

      - name: Publish the Sketch Library to the GitHub release
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.variables.outputs.upload_url }}
          asset_path: .__lona-artifact-path/sketch-library.sketch
          asset_name: library.sketch
          asset_content_type: application/zip

  npm-package:
    runs-on: ubuntu-latest
    needs: [documentation]
    steps:
      - name: Get variables from documentation (1/2)
        uses: actions/download-artifact@v1
        with:
          name: lona-variables
          path: .__lona-artifact-path
      - name: Get variables from documentation (2/2)
        run: |
          while read p; do
            echo "$p"
          done <.__lona-artifact-path/variables.txt
        id: variables

      - name: Get the latest version of the repository
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Install the Lona Compiler
        run: npm install lonac

      - name: Generate js sources
        run: ./node_modules/.bin/lonac workspace --workspace . --target js --output ./__lona-npm-output

      - name: Generate package.json
        run: |
          REPO_LOWERCASE=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "{
            \"name\": \"@$REPO_LOWERCASE\",
            \"version\": \"${{ steps.variables.outputs.new_version }}\",
            \"publishConfig\": { \"registry\": \"https://npm.pkg.github.com/\" },
            \"repository\": \"git://github.com/${{ github.repository }}\"
          }" >> package.json
        working-directory: ./__lona-npm-output

      - name: Publish package to GitHub Package Registry
        run: |
          echo "//npm.pkg.github.com/:_authToken=${{ secrets.GITHUB_TOKEN }}" > ~/.npmrc
          npm publish
        working-directory: ./__lona-npm-output
        env:
          NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  cocoapod:
    runs-on: macos-latest
    needs: [documentation]
    steps:
      - name: Get variables from documentation (1/2)
        uses: actions/download-artifact@v1
        with:
          name: lona-variables
          path: .__lona-artifact-path
      - name: Get variables from documentation (2/2)
        run: |
          while read p; do
            echo "$p"
          done <.__lona-artifact-path/variables.txt
          echo "::set-output name=repo_name::$(echo "${{ github.repository }}" | tr '/' '_')"
        id: variables

      - name: Get the latest version of the repository
        uses: actions/checkout@v1

      - name: Setup Node
        uses: actions/setup-node@v1
        with:
          node-version: "12.x"

      - name: Install cocoapods-generate
        run: gem install cocoapods-generate

      - name: Install the Lona Compiler
        run: npm install -g lonac

      - name: Generate Swift sources
        run: |
          lonac workspace --workspace=. --target=swift --output=./.lona-pod/${{ steps.variables.outputs.repo_name }}/Sources

      - name: Create podspec
        run: |
          echo "Pod::Spec.new do |s|
            s.name         = \"${{ steps.variables.outputs.repo_name }}\"
            s.version      = \"${{ steps.variables.outputs.new_version }}\"
            s.summary      = \"A pod for the ${{ github.repository }} Lona Workspace.\"
            s.homepage     = \"https://github.com/${{ github.repository }}\"
            s.license      = \"None\"
            s.author       = { \"Lona\" => \"support+pod@lona.design\" }
            s.source       = { :http => \"https://github.com/${{ github.repository }}/releases/download/${{ steps.variables.outputs.new_tag }}/pod.zip\" }
            s.source_files  = \"${{ steps.variables.outputs.repo_name }}/Sources/**/*.{m,h,swift}\"
            s.ios.deployment_target = \"10\"
            s.macos.deployment_target = \"10.12\"
          end" >> pod.podspec
        working-directory: ./.lona-pod

      - name: Generate Workspace
        run: pod gen ./pod.podspec --gen-directory=.
        working-directory: ./.lona-pod

      - name: Archive pod
        run: zip -r ./.lona-pod-archive.zip ./.lona-pod/${{ steps.variables.outputs.repo_name }}

      - name: Publish the podspec to the GitHub release
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.variables.outputs.upload_url }}
          asset_path: ./.lona-pod/pod.podspec
          asset_name: pod.podspec
          asset_content_type: text/plain

      - name: Publish the Pod to the GitHub release
        uses: actions/upload-release-asset@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.variables.outputs.upload_url }}
          asset_path: ./.lona-pod-archive.zip
          asset_name: pod.zip
          asset_content_type: application/zip
